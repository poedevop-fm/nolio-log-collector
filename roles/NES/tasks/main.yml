---
# Playbook for an NES
    ##########
    # 
    # To find the install location and store the location to a var
    #
    - name: "find install location"
      shell: "readlink -f '{{ nolio_ASAP_service }}' | xargs dirname"
      register: nolio_ASAP_install_dir

    ##########
    # 
    # Update logging levels to be able to catch issues when needed
    #
    - name: "Update logging RegularExecution"
      lineinfile: dest="{{ nolio_ASAP_install_dir.stdout }}/webapps/execution/WEB-INF/log4j.properties" regexp=^log4j.appender.RegularExecution.MaxBackupIndex= line=log4j.appender.RegularExecution.MaxBackupIndex={{ log_file_count }}
      when: update_logging == "true"

    - name: "Update logging ExecutionFileAppender"
      lineinfile: dest="{{ nolio_ASAP_install_dir.stdout }}/webapps/execution/WEB-INF/log4j.properties" regexp=^log4j.appender.ExecutionFileAppender.MaxBackupIndex= line=log4j.appender.ExecutionFileAppender.MaxBackupIndex={{ log_file_count }}
      when: update_logging == "true"

    - name: "Update logging NimiFileAppender"
      lineinfile: dest="{{ nolio_ASAP_install_dir.stdout }}/webapps/execution/WEB-INF/log4j.properties" regexp=^log4j.appender.NimiFileAppender.MaxBackupIndex= line=log4j.appender.NimiFileAppender.MaxBackupIndex={{ log_file_count }}
      when: update_logging == "true"


    ##########
    # 
    # Make sure nolio temp location exists
    #
    - name: "create temp location so it's safe to delete later"
      file: path="{{ temp_location }}/{{ ansible_fqdn }}/NES" state="directory"


    ##########
    #
    # copy conf folder
    #
    - name: "copy configs"
      command: "cp -rL {{ nolio_ASAP_install_dir.stdout }}/conf {{ temp_location }}/{{ ansible_fqdn }}/NES/"
      when: collect_logs == "true"

    ##########
    #
    # Copy the agent logs to /tmp location
    #
    - name: "copy logs"
      command: "cp -rL {{ nolio_ASAP_install_dir.stdout }}/logs {{ temp_location }}/{{ ansible_fqdn }}/NES/"
      when: collect_logs == "true"

    ##########
    #
    # Provide a finishing touch
    #  
    - name: "wrap up"
      command: "echo"
      notify:
        - zip logs
        - fetch the nolio logs to local machine
        - stop NolioASAP
        - remove temporary files and logs from NAC and NES
        - remove activemq data from NAC and NES
        - start NolioASAP
